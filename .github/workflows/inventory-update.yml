name: Tool database and stats updater

on:
  schedule:  # runs every sunday at 10 pm
    - cron: "0 22 * * SUN"
  pull_request: # or runs on relevant PRs
    branches:
      - "main"
    paths:
      - "inventory/**"
      - "!inventory/output/*.csv"

jobs:
  get-stats:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # For PRs, we need to fetch the full history to commit back
          fetch-depth: 0
          # Use a token that can create PRs and push to branches
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Pixi
        uses: prefix-dev/setup-pixi@v0.8.8
        with:
          pixi-version: v0.44.0
          cache: true
          # Do not cache in branches
          cache-write: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
          auth-host: prefix.dev

      - name: Run pixi task
        run: pixi run get-stats

      - name: Check for file changes
        id: check-changes
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Files have been modified by pixi task"
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No files were modified by pixi task"
          fi

      - name: Configure Git
        if: steps.check-changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      # Handle changes when running on main branch
      - name: Create PR for main branch changes
        if: steps.check-changes.outputs.changes == 'true' && github.ref == 'refs/heads/main'
        run: |
          # Create a new branch for the changes
          BRANCH_NAME="tool-stats-updates-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $BRANCH_NAME

          # Add and commit changes
          git add .
          git commit -m "chore: update tools stats

          Auto-generated changes from pixi `get-stats` task execution on main branch."

          # Push the new branch
          git push origin $BRANCH_NAME

          # Create PR using GitHub CLI
          gh pr create \
            --title "chore: update tools stats" \
            --body "This PR contains automated changes to the tool inventory and statistics generated by running the pixi `get-stats` task on the main branch.

          ## Changes
          - Files were modified by pixi task execution
          - This is an automated PR created by GitHub Actions

          Please review the changes before merging." \
            --base main \
            --head $BRANCH_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Handle changes when running in a PR
      - name: Commit changes to PR
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'pull_request'
        run: |
          # Add and commit changes directly to the PR branch
          git add .
          git commit -m "chore: update tools stats

          Auto-generated changes from pixi `get-stats` task execution."

          # Push changes to the PR branch
          git push origin HEAD

      - name: Add PR comment about changes
        if: steps.check-changes.outputs.changes == 'true' && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ü§ñ **Pixi Task Update**\n\nThe tool inventory / associated stats . These changes have been automatically committed to this PR.'
            })

      - name: Summary
        run: |
          if [[ "${{ steps.check-changes.outputs.changes }}" == "true" ]]; then
            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "‚úÖ Created PR with tool inventory updates"
            else
              echo "‚úÖ Committed tool inventory updates to PR"
            fi
          else
            echo "‚ÑπÔ∏è No changes generated by pixi task"
          fi
